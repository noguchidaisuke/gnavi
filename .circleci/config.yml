version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    working_directory: ~/myapp
    steps:
      - checkout
      - run:
          name: addenv
          command:  |
            echo GURUNAVI_API_KEY=$GURUNAVI_API_KEY > .env
            echo SECRET_KEY_BASE=$SECRET_KEY_BASE >> .env
            echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
            echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env
      - run:
          name: up
          command: docker-compose up -d
      - run:
          name: sleep for DB launch
          command: |
            sleep 10
      - run:
          name: bundle install
          command: |
            docker-compose run web bundle install
      - run:
          name: migrate db
          command: docker-compose run web rails db:create db:migrate
      - run:
          name: test
          command: |
            docker-compose run web bundle exec rspec
  deploy:
   machine:
    image: circleci/classic:edge
   working_directory: ~/myapp
   steps:
    - checkout
    - run:
       name: into ecs
       command: $(aws ecr get-login --region ${AWS_REGION} --no-include-email)
    - run:
        name: addenv
        command:  |
          echo GURUNAVI_API_KEY=$GURUNAVI_API_KEY > .env
          echo SECRET_KEY_BASE=$SECRET_KEY_BASE >> .env
          echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
          echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env
    - run:
       name: ECR build
       command: docker build -t ${AWS_ID}/gnavi_web .
    - run:
        name: ECR push
        command: docker push ${AWS_ID}/gnavi_web
    - run:
       name: deploy
       command: scripts/ecs-deploy --cluster lll --service-name gnavi-sv1 --region ${AWS_REGION} --image ${AWS_ID}/gnavi_web:latest --timeout 600
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
         requires:
          - build